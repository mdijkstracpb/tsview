remove.packages("digest", lib="")
.libPaths()
remove.packages("digest", lib="")
packrat::clean()
library(tsview)
tsview(gui=TRUE)
library(tsview)
tsview(gui=TRUE)
?require
library(tsview)
tsview(gui=TRUE)
library(tsview)
tsview(gui=TRUE)
library(tsview)
tsview(gui=TRUE)
search()
installed.packages()
head(installed.packages())
head(installed.packages())
head(installed.packages())[,1]
names(head(installed.packages()))
rownames(head(installed.packages()))
if (2) print("x")
if (2243) print("x")
if (-2243) print("x")
if (0) print("x")
library(tsview)
tsview()
tsview(gui=TRUE)
devtools
remove.packages("digest", lib="")
library(tsview)
packrat::clean()
detach("package:tsview", unload=TRUE)
packrat::clean()
packrat::snapshot()
library(tsview)
tsview(gui=TRUE)
requireNamespace("shiny")
requireNamespace("shiny", qu=T)
requireNamespace("shiny", quietly = T)
print(requireNamespace("shiny", quietly = T))
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("roxygen2")
library("roxygen2")
library(roxygen2)
library(roxygen2daf)
library(tsview)
tsview()
tsview(g=T)
library(tsview)
tsview(g=T)
devtools::use_package("shiny")
install.packages("shiny")
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
library(tsview)
tsview(g=T)
tsview(g=F)
library(tsview)
tsview(g=F)
library(packrat, shiny)
?library
library(tsview)
tsview(g=F)
library(tsview)
tsview(g=F)
unquo
unquote("hoi")
?quote
library(noquote("shiny"))
noquote("shiny")
library("shiny", character.only = T)
library(tsview)
tsview(g=F)
tsview(g=F)
tsview(g=F)
packrat::clean()
packrat::snapshot()
library(tsview)
tsview(g=F)
tsview(g=T)
renderPlot
library(tsview)
tsview(g=T)
library(tsview)
path.package("tsview")
?system.file
library(tsview)
list.files()
library(tsview)
lf
lf()
library(tsview)
lf()
list.files()
list.files(path.package("tsview"))
list.files(paste0(path.package("tsview"), "/y"))
library(tsview)
lf()
library(tsview)
lf()
package.path("tsview")
path.package("tsview")
library(tsview)
citation(tsview)
citation("tsview")
library(tsview)
library(tsview)
ls()
lf()
library(tsview)
lf()
library(tsview)
lf()
library(tsview)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
pwd
library(tsview)
tsview(g=T)
getwd()
list.files()
library(tsview)
tsview(g=T)
system.file(file.name, package = "tsviewx")
system.file(file.name, package = "tsview")
system.file("file.name", package = "tsviewx")
system.file("file.name", package = "tsview")
system.file("www/www-button.css", package = "tsview")
system.file("www/www-button.css", package = "tsviewx")
library(tsview)
tsview(g=T)
installed.packages()
installed.packages()[,"Package"]
library(tsview)
full.path("hoi")
full.path("www/www-button.css")
tsview()
library(tsview)
tsview()
library(tsview)
tsview()
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
tsview(g=T)
library(tsview)
tsview(g=T)
normalizePath
?normalizePath
system.file("www", package = "tsview")
system.file("", package = "tsview")
library(tsview)
library(tsview)
tsview(g=T)
system.file("www", "www-cpb_logo.png", package = "tsview")
system.file("www", "www-cpb_logo.png", package = "tsviewx")
system.file("www", "www-cpb_logo.png", package = "tsview")
library(tsview)
system.file("www", "www-cpb_logo.png", package = "tsview")
system.file("www", "www-cpb-logo.png", package = "tsview")
library(tsview)
tsview(g=T)
library(tsview)
tsview(g=T)
help(shiny)
examples
example("shiny")
examples("shiny")
demo(shiny)
library(shiny)
demo(shiny)
example("shiny")
example(shiny)
?shinyApp
?runApp
runExample
library(tsview)
doit()
library(tsview)
doit()
library(tsview)
doit()
library(tsview)
doit()
library(tsview)
doit()
library(tsview)
doit()
?runApp
ls()
ls(all = T)
.Random.seed
rm(.Random.seed)
.libPaths()
packrat::clean()
packrat::restore()
packrat::init()
